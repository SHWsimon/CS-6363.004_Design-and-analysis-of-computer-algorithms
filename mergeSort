mergeSort(A)
  mergeSort(A, o ,n-1);
  
mergeSort(A, p, r) //A[p,...,r]
  if(q<r)
    q ← (p+r)/2;
    mergeSort(A, p, q);
    mergeSort(A, q+1, r);
    merge(A, p, q, r);
    
merge(A, p, q, r) //Precondition: p ≤ q < r, A [ i ] ≤ A [ i + 1 ] , for i ∈ [ p..q ] and i ∈ [ q + 1..r ]
  Copy A [ p..q ] into L [ 1..q − p + 1 ];
  Copy A [ q + 1..r ] into R [ 1..r − q ];
  Set sentinels L[ q − p + 2 ] = R[ r − q + 1 ] = ∞;
  i ← 1, j ← 1;
  for k ← p to r do
    if(L[i] ≤ R[j])
      A[k] ← L[i]
      i←i+1
    else
      A[k] ← R[j]
      j←j+1
  
